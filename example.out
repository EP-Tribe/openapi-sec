# filter per source ip address
SecRule REMOTE_ADDR "@ipMatch 164.177.43.41" "id:'666',skipAfter:IP_IS_ALLOWED_666,nolog"
SecAction "deny,id:'667',log,msg:'IP not allowed on this endpoint',logdata:%{MATCHED_VAR}"
SecMarker IP_IS_ALLOWED_666
# allow only available methods
SecRule REQUEST_METHOD "!^(?:POST|OPTIONS)$" "phase:2,t:none,deny,id:'309',status:405,msg:'Unauthorize method',logdata:%{REQUEST_METHOD},setenv:METHODERROR"
# ratelimiting the number of call per minute
SecRule REMOTE_ADDR "@ipMatch 80.74.77.232,90.83.0.241,127.0.0.1,192.168.20.0/24,10.250.0.0/24,164.177.43.41" "skipAfter:IGNORE_RATELIMIT_310,nolog,id:'311'"
SecAction "initcol:ip=%{REMOTE_ADDR}_%{REQUEST_HEADERS.User-Agent},pass,nolog,id:'312'"
SecAction "phase:5,deprecatevar:ip./v1/professionnels/chantiers/count/maj-crm=100/60,pass,nolog,id:'313'"
SecAction "phase:2,pass,setvar:ip./v1/professionnels/chantiers/count/maj-crm=+1,nolog,id:'314'"
SecRule IP:/v1/professionnels/chantiers/count/maj-crm "@gt 100" "phase:2,pause:300,deny,setenv:RATELIMITED,skip:1,id:'315',status:400,msg:'too many request per minute',logdata:%{MATCHED_VAR}"
SecMarker IGNORE_RATELIMIT_310
# check arguments if method = post
SecRule REQUEST_METHOD "!^(?:POST)$" "skipAfter:FILTER_BY_RM_668,nolog,id:'317'"
SecRule ARGS_NAMES "!^(?:Authorization)$" "phase:2,t:none,deny,id:'316',status:400,msg:'Unrecognized argument',logdata:%{MATCHED_VAR},setenv:ARGNAMEERROR=%{MATCHED_VAR}"
SecMarker FILTER_BY_RM_668
# check content type
SecRule REQUEST_HEADERS:Content-Type "!@rx (?i)^(application/json)" "phase:1,t:none,deny,id:'317',status:400,msg:'Invalid content-type',logdata:%{MATCHED_VAR},setenv:CTYPEERROR"